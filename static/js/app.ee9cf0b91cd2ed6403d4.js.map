{"version":3,"sources":["webpack:///./src/bus.js","webpack:///./src/pixchart/lib/loadParticles.js","webpack:///./src/config.js","webpack:///./src/pixchart/lib/shaders/histogram.vs.glsl.js","webpack:///./src/scene.js","webpack:///./src/pixchart/lib/createShaders.js","webpack:///./src/lib/customInterpolation.js","webpack:///./src/pixchart/lib/groupFunctions.js","webpack:///./src/lib/getBestMaxPixels.js","webpack:///./src/pixchart/lib/colors.js","webpack:///./src/pixchart/index.js","webpack:///./src/lib/makeStats.js","webpack:///./src/nativeMain.js","webpack:///./src/lib/fileDrop.js","webpack:///./src/pixchart/lib/loadImage.js","webpack:///./src/lib/formatNumber.js","webpack:///./src/pixchart/lib/gl-utils.js"],"names":["eventify","__webpack_require__","module","exports","random","groupFunctions","MAX_THREAD_TIME_MS","image","options","Error","actualResolve","onProgress","ignoredBuckets","getValue","normalizeV","name","groupByFunctionName","requestedGrouping","normalize","getGroupByFunction","colorGroupBy","maxThreadTime","maxFrameSpan","initIntervals","console","time","cnv","document","createElement","width","height","n","bucketsCount","bucketCount","bucketWidth","Math","ceil","maxYValue","nonFilteredMaxYValue","minVValue","Number","POSITIVE_INFINITY","maxVValue","NEGATIVE_INFINITY","ctx","getContext","drawImage","pixels","getImageData","data","idx","minFrameSpan","particleAttributes","Float32Array","bucketColors","Uint32Array","timeEnd","pixelsCount","i","r","g","b","v","scheduleWork","Promise","resolve","isCancelled","setTimeout","processPixels","currentYValue","start","performance","now","isStochastic","stochastic","invIndex","bucketNumber","round","frameSpan","gaussian","floor","bucketMaxY","has","log","buckets","canvas","sidebarWidth","sidebarHeight","isSmallScreen","window","innerWidth","customParticleInterpolation","queryState","pixChart","config","makeStats","createFileDropHandler","formatNumber","getBestMaxPixels","customInterpolation","bus","DEFAULT_ANIMATION_DURATION","DEFAULT_BUCKET_COUNT","PAUSE_BETWEEN_CYCLES","qs","d","useSearch","toFrames","seconds","currentPixChart","pendingTimeout","cleanErrorClass","progressElement","getElementById","queue","lastIndex","url","get","processNextInQueue","addEventListener","handlePaste","updateSize","onCanvasClick","body","onKeyDown","on","updateTheme","dropHandler","handleDroppedFiles","bucketList","ignoredBucketSet","Set","add","split","forEach","parseInt","isNaN","readIgnoredBuckets","keepIgnoreBuckets","size","knownAnimations","state","sidebarOpen","duration","plainInput","parsedValue","maxPixels","currentColorGroupBy","getSafeColorGroupBy","initialImageState","animationType","getSafeAnimationType","paused","isFirstRun","length","isLocalFiles","dispose","clearTimeout","removeEventListener","off","setImages","setAnimationDuration","setAnimationType","set","restartCurrentAnimation","setBucketCount","newCount","setMaxPixels","style","innerText","opacity","setColorGroupBy","groupBy","safeGroupBy","setInitialState","newInitialState","ignoreBucket","bucketsToToggle","clearIgnoreBuckets","Array","isArray","c","delete","toggleIgnoreBuckets","from","join","getStatistics","particles","getParticles","sceneState","rawInput","e","items","clipboardData","files","strings","file","kind","push","getAsFile","type","preventDefault","getAsString","s","match","images","filter","isImage","indexOf","target","which","togglePaused","clientX","clientY","innerHeight","forceDispose","processPrevInQueue","stopPropagation","showLoadingProgress","step","fire","x","y","sideBarWidthOffset","sideBarHeightOffset","setSceneSize","newTheme","progress","current","total","imageObject","isUrl","classList","innerHTML","remove","keepQueryString","clear","createPixChart","imageLink","pixChartConfig","scaleImage","collapsed","framesCount","interpolate","bezierNoise","voigram","notifyFrame","t","parseFloat","setFramesCount","img","restartCycle","setImage","vertexShader","fragmentShader","customInterpolate","rgbToHsl","rgb.r","rgb.g","rgb.b","hsl.h","hsl.s","hsl.l","avg.rgb","harmonic.rgb","dpr","devicePixelRatio","windowArea","min","component","h","max","l","createShaders","glUtils","loadImage","loadParticles","ANIMATION_COLLAPSE","ANIMATION_EXPAND","link","getUrl","URL","createObjectURL","gl","nextAnimationFrame","imageWidth","imageHeight","frameChangeRate","imgInfo","particleAttributesBuffer","currentParticles","initialState","disposed","isPaused","lastPauseRelease","currentFrameNumber","particleLoaderSettings","processedPixels","notifyProgress","undefined","requestSizeUpdate","sceneWidth","clientWidth","sceneHeight","clientHeight","startDelay","reverseDelay","shaders","screenProgram","createProgram","api","cancelAnimationFrame","releasePreviousWebGLResources","unload","ignoreBucketSet","newIgnoredBucketsSet","loadImageWithCurrentOptions","then","updateProgressAndLoadParticles","initWebGLPrimitives","startExpandCollapseCycle","requestAnimationFrame","viewport","drawCurrentFrame","newMaxPixels","loadedImage","newColorGroupBy","animate","Date","catch","error","texture","createTexture","keepCurrentFrame","createBuffer","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","useProgram","program","bindAttribute","a_particle","bindTexture","setInitialFrameNumber","uniform4f","u_frame","uniform1f","u_max_y_value","u_sizes","uniform1i","u_image","drawArrays","POINTS","completeState","delay","deleteBuffer","deleteTexture","sortedBuckets","count","isFiltered","id","ratio","sort","a","initScene","ctxOptions","antialias","webGLEnabled","scene","initPixChart","bind","oe","onDropped","handleDrop","handleDragOver","prevent","handleDragEnd","hasFiles","ev","dt","dataTransfer","resolveImage","rejectImage","Image","crossOrigin","onload","ar","h0","sqrt","w0","scale","onerror","err","src","reject","toString","replace","createShader","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","unit","activeTexture","TEXTURE0","TEXTURE_2D","buffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","attribute","numComponents","enableVertexAttribArray","vertexAttribPointer","FLOAT","vertexSource","fragmentSource","VERTEX_SHADER","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","wrapper","deleteProgram","numAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","numUniforms","ACTIVE_UNIFORMS","uniform","getActiveUniform","getUniformLocation","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","texImage2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR"],"mappings":"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","file":"static/js/app.ee9cf0b91cd2ed6403d4.js","sourcesContent":["var eventify = require('ngraph.events');\n\nmodule.exports = eventify({});\n\n\n// WEBPACK FOOTER //\n// ./src/bus.js","/**\n * This is the core of particles preprocessing.\n * \n * It asynchronously performs calculation of particles destinations.\n * Depending on a value function, the algorithm processes all particles\n * in just one pass (linear performance of particles count). If value function\n * needs normalization, then algorithm iterates over particles twice.\n */\nvar random = require('ngraph.random')(42);\nvar groupFunctions = require('./groupFunctions');\n\n// How many milliseconds we are allowed to process the particles before\n// giving control back to UI thread.\nvar MAX_THREAD_TIME_MS = 12; // Picked by hand.\n\nmodule.exports = loadParticles;\n\nfunction loadParticles(image, options) {\n  if (!options) throw new Error('Options required');\n\n  var actualResolve;\n  var {onProgress, ignoredBuckets} = options;\n\n  var {getValue, normalizeV, name: groupByFunctionName} = getGroupByFunction(options.colorGroupBy);\n  var maxThreadTime = options.maxFrameSpan || MAX_THREAD_TIME_MS;\n\n  var initIntervals = 0;\n\n  console.time('init stats');\n\n  var cnv = document.createElement('canvas');\n  var width = cnv.width = image.width, height = cnv.height = image.height;\n  var n = width * height;\n\n  var bucketsCount = options.bucketCount || 42;\n  var bucketWidth = Math.ceil(width/bucketsCount); // in pixels.\n\n  var maxYValue = 0;  \n  var nonFilteredMaxYValue = 0;\n  var minVValue = Number.POSITIVE_INFINITY;\n  var maxVValue = Number.NEGATIVE_INFINITY;\n  \n  var ctx = cnv.getContext('2d');\n  ctx.drawImage(image, 0, 0, image.width, image.height); \n\n  var pixels = ctx.getImageData(0, 0, width, height).data;\n  var idx = 0;\n  var minFrameSpan = Number.POSITIVE_INFINITY, maxFrameSpan = Number.NEGATIVE_INFINITY;\n\n  // each pixel is mapped to height inside its bucket;\n  var particleAttributes = new Float32Array(4 * n);\n\n  // this is a temporary tracker of taken spots inside a bucket\n  var bucketColors = new Uint32Array(bucketsCount);\n\n  console.timeEnd('init stats');\n  \n  console.time('initParticles');\n\n  if (normalizeV) {\n    // TODO: Async?\n    console.time('minmax');\n    var pixelsCount = 4 * n;\n    for (var i = 0; i < pixelsCount; i += 4) {\n      var r = pixels[i + 0], g = pixels[i + 1], b = pixels[i + 2];\n      var v = getValue(r, g, b);\n      if (v < minVValue) minVValue = v;\n      if (v > maxVValue) maxVValue = v;\n    }\n    console.timeEnd('minmax');\n  } else {\n    minVValue = 0;\n    maxVValue = 1;\n  }\n  scheduleWork();\n  \n  return new Promise((resolve) => { actualResolve = resolve; });\n\n  function getGroupByFunction(requestedGrouping) {\n    if (typeof requestedGrouping === 'string') {\n      requestedGrouping = groupFunctions[requestedGrouping];\n    }\n    if (typeof requestedGrouping === 'function') {\n      return {\n        name: 'custom',\n        normalizeV: false,\n        getValue: requestedGrouping\n      };\n    }\n    if (requestedGrouping && typeof requestedGrouping.getValue === 'function') {\n      return {\n        normalizeV: requestedGrouping.normalize,\n        getValue: requestedGrouping.getValue,\n        name: requestedGrouping.name\n      };\n    }\n\n    throw new Error('Unknown group by function');\n  }\n\n  function scheduleWork() {\n    if (options.isCancelled) return;\n\n    initIntervals += 1;\n    if (initIntervals % 10 === 0) {\n      onProgress(idx/4);\n    }\n\n    setTimeout(processPixels, 0);\n  }\n  \n  function processPixels() {\n    var start = performance.now(); \n    var currentYValue;\n    var pixelsCount = 4 * n;\n    var isStochastic = options.stochastic;\n\n    while (idx < pixelsCount) { \n      var invIndex = pixelsCount - idx - 4;\n      var r = pixels[invIndex + 0], g = pixels[invIndex + 1], b = pixels[invIndex + 2];\n\n      var v = (getValue(r, g, b) - minVValue)/(maxVValue - minVValue);\n      // v ranges from 0 to 1.\n      var bucketNumber = Math.round(v * bucketsCount);\n\n      if (bucketNumber === bucketsCount) {\n        // prevent overflow\n        bucketNumber -= 1;\n      }\n\n      currentYValue = (bucketColors[bucketNumber] += 1);\n      currentYValue -= 1;\n      // assign this pixel to this height in the bucket\n      // Note: if we want to be less jumpy during changes in particles count,\n      // we can augment this code with previous particle configuration.\n      var frameSpan = random.gaussian();\n\n      particleAttributes[idx + 0] = (bucketNumber/bucketsCount) +\n       (currentYValue % bucketWidth)/(bucketsCount * bucketWidth);\n      particleAttributes[idx + 1] = Math.floor(currentYValue/bucketWidth);\n      particleAttributes[idx + 2] = isStochastic ? frameSpan : 0;\n      particleAttributes[idx + 3] = invIndex/4;\n\n      if (frameSpan < minFrameSpan) minFrameSpan = frameSpan;\n      if (frameSpan > maxFrameSpan) maxFrameSpan = frameSpan;\n\n      var bucketMaxY = particleAttributes[idx + 1];\n      // TODO: this should be based on custom callback.\n      if (ignoredBuckets && ignoredBuckets.has(bucketNumber)) { \n        particleAttributes[idx] = -1;\n      } else if (bucketMaxY > maxYValue) maxYValue = bucketMaxY;\n\n      if (bucketMaxY > nonFilteredMaxYValue) nonFilteredMaxYValue = bucketMaxY;\n\n      idx += 4;\n      if (performance.now() - start > maxThreadTime) {\n        scheduleWork();\n        return;\n      }  \n    }\n\n    console.timeEnd('initParticles');\n    console.log('initialized in ' + initIntervals + ' intervals; Max Value:', maxYValue);\n    console.log('Color range: ', minVValue, maxVValue);\n    console.log('Lifespan range: ', minFrameSpan, maxFrameSpan);\n    \n    actualResolve({\n      buckets: bucketColors,\n      groupByFunctionName,\n      minFrameSpan,\n      maxFrameSpan,\n      minVValue,\n      maxVValue,\n      particleAttributes: particleAttributes,\n      canvas: cnv,\n      maxYValue: maxYValue,\n      nonFilteredMaxYValue,\n      bucketWidth,\n      ignoredBuckets\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pixchart/lib/loadParticles.js","module.exports = {\n  sidebarWidth: 400,\n  sidebarHeight: 42,\n  isSmallScreen() {\n    return window.innerWidth <= 800;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","module.exports = function getShaderCode(customParticleInterpolation) {\n  var interpolateParticleCode = (customParticleInterpolation || linearParticleInterpolation)();\n\n  return `\nprecision highp float;\nuniform sampler2D u_image;\n\n// Everything we need to know about frame\n// [0] - currentFrameNumber\n// [1] - minFrame value\n// [2] - maxFrame value\nuniform vec4 u_frame;\nuniform float u_max_y_value;\nuniform vec2 mouse_pos;\nuniform vec4 u_sizes;\n\n// [0] is x coordinate of a particle\n// [1] is y coordinate of a particle\n// [2] is particle lifespan\n// [3] is particle index in the texture.\nattribute vec4 a_particle;\n\nvarying vec4 v_color;\n\nfloat ease(float t) {\n  return t < 0.5 ? 2. * t * t : -1. + (4. - 2. * t) * t;\n}\n\nvec2 bezier(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t) {\n  float one_minus_t = 1. - t;\n\n  return one_minus_t * one_minus_t * one_minus_t * p0 + \n    3. * one_minus_t * one_minus_t * t * p1 + \n    3. * one_minus_t * t * t * p2 +\n    t * t * t * p3;\n}\n\nfloat bease(float t, vec2 p1, vec2 p2) {\n  vec2 p0 = vec2(0.);\n  vec2 p3 = vec2(1.);\n  vec2 res = bezier(p0, p1, p2, p3, t);\n  return res.y;\n}\n\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\n\nfloat rand(const vec2 co) {\n  float t = dot(rand_constants.xy, co);\n  return fract(sin(t) * (rand_constants.z + t));\n} \n\nvec3 rgb2hsv(vec3 c) {\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v) {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy));\n  vec2 x0 = v -   i + dot(i, C.xx);\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nvec2 cmpxmul(in vec2 a, in vec2 b) {\n\treturn vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\n}\n\nvoid main() { \n  vec2 texture_pos = vec2(\n    fract(a_particle[3] / u_sizes.x) + 0.5/u_sizes.x,\n    floor(a_particle[3] / u_sizes.x)/(u_sizes.y) + 0.5/u_sizes.y\n  );\n\n  v_color = texture2D(u_image, texture_pos);\n  if (texture_pos.x >= 1.0 || texture_pos.y >= 1.) {\n    // This point is beyond texture edge. ignore.\n    v_color.a = 0.;\n  }\n\n  float factor = min(u_sizes[3]/u_sizes[1], u_sizes[2]/u_sizes[0]);\n  vec2 source = vec2(\n    (2. * (texture_pos.x) - 1.),\n    1. - 2.* texture_pos.y\n  ) * factor * u_sizes.xy/u_sizes.zw;\n\n  vec2 target = vec2(\n    (2. * (a_particle.x)   - 1.) * 0.9,\n    (2. * a_particle.y/(u_max_y_value) - 1.) * 0.9\n  ) * factor * u_sizes.xy/u_sizes.zw; \n  \n\n// This particle is allowed to live timeSpan steps, while current frame (u_frame[0]) is\n// advancing. Their time zero is counted at u_frame[1].\n  float timeSpan = a_particle.z;\n  float t0 = clamp((u_frame[0] - u_frame[1])/(timeSpan - u_frame[1]), 0., 1.);\n  float t = bease(t0, vec2(0., 0.19), vec2(0.61, 1)); // easeInOutCubic\n  //float t = ease(t0);\n\n  if (a_particle.x < 0.) {\n    // these particles are filtered out.\n    // target.x = 0.; //source.x; //cos(atan(source.y, source.x)) * 2.;\n    // target.y = 0.; //source.y; //sin(atan(source.y, source.x)) * 2.;\n    v_color.a = 0.; //mix(0.1, 0., t);\n  }\n\n  // // This would give 3d\n  vec3 h = rgb2hsv(v_color.rgb);\n  // float z = mix(0., h[0], t);\n  // float zCam = 2.;\n  // target.x = -target.x/(z - zCam);\n  // target.y = -target.y/(z - zCam);\n\n  // we want to have fast start/slow cool down on each animation phase\n  float tmin = 1. - t;\n  ${interpolateParticleCode}\n  // vec2 dest = tmin * tmin * source + 2. * tmin * arrival0 * t + t * t * target;\n  //vec2 dest = tmin * tmin * tmin * source + 3. * tmin * tmin * vec2(0., 0.1) * t + 3. * tmin * t * t * target/2. + target * t * t * t; \n  //v_color.a = mix(1.0, 0.8, t);\n  //gl_Position = vec4(dest, 0, 1);\n  //gl_Position = vec4(dest, 0, 1);\n  gl_Position = vec4(dest, 0, 1);\n  gl_PointSize = max(1., ceil(factor));//= mix(srcSize, destSize, t);\n}\n`\n}\n\nfunction linearParticleInterpolation() {\n  return `\nvec2 dest = u_frame[3] == 2. ? tmin * target + t * source : tmin * source + t * target;\n  `\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pixchart/lib/shaders/histogram.vs.glsl.js","/**\n * This is \"the brain\" of the animation. It manages all parts of the \n * animation configuration and workflows.\n */\nvar queryState = require('query-state');\nvar pixChart = require('./pixchart/index');\nvar config = require('./config.js');\nvar makeStats = require('./lib/makeStats');\nvar createFileDropHandler = require('./lib/fileDrop');\nvar formatNumber = require('./lib/formatNumber');\nvar getBestMaxPixels = require('./lib/getBestMaxPixels');\nvar customInterpolation = require('./lib/customInterpolation');\nvar bus = require('./bus');\n\nvar DEFAULT_ANIMATION_DURATION = 4.0; // in seconds, because visible to users\nvar DEFAULT_BUCKET_COUNT = 510;\nvar PAUSE_BETWEEN_CYCLES = 1000; // in milliseconds, because for developers\nvar qs = queryState({\n  d: DEFAULT_ANIMATION_DURATION\n}, {useSearch: true});\n\nmodule.exports = initScene;\n\nfunction initScene(canvas) {\n  var currentPixChart;\n  var cleanErrorClass = false;\n  var progressElement = document.getElementById('progress');\n  var queue = [];\n  var lastIndex = 0;\n  var pendingTimeout;\n\n  var url = qs.get('link')\n\n  if (url) {\n    queue = [url];\n    pendingTimeout = setTimeout(processNextInQueue, 0);\n  }\n\n  listenToEvents();\n\n  var dropHandler = createFileDropHandler(document.body, handleDroppedFiles);\n  var ignoredBuckets = readIgnoredBuckets(qs.get('ignore'));\n  // If this is first time loading, respect the ignore buckets.\n  var keepIgnoreBuckets = ignoredBuckets.size > 0;\n  var knownAnimations = new Set([\n    'linear-constant', 'linear-stochastic',\n    'bezier-constant',  'bezier-stochastic'\n  ])\n\n  // This is the state of the application - primary interaction point between Vue <-> WebGL\n  var state = {\n    // State consists of two parts.\n\n    // # Part 1 - Data\n    image: url,\n    // We don't want to overwhelm people with options\n    // when they are browsing from mobile, so we close side bar on small screens\n    sidebarOpen: !config.isSmallScreen(),\n    duration: DEFAULT_ANIMATION_DURATION, \n    bucketCount: getSafeBucketCount(qs.get('bc')),\n    maxPixels: getBestMaxPixels(),\n    currentColorGroupBy: getSafeColorGroupBy(qs.get('groupBy')), \n    initialImageState: getSafeInitialState(qs.get('initial')),\n    animationType: getSafeAnimationType(qs.get('atype')),\n    paused: false,\n    isFirstRun: queue.length === 0,\n    isLocalFiles: false,\n\n    /**\n     * Requests to update scene dimensions.\n     */\n    updateSize,\n\n    /**\n     * Destroy scene and release all resources.\n     */\n    dispose,\n    \n    /**\n     * Sets queue of images to play\n     */\n    setImages,\n\n    /**\n     * Sets duration of single animation step (expand or collapse)\n     */\n    setAnimationDuration,\n\n    /**\n     * Sets animation type from a set of predefined types\n     */\n    setAnimationType,\n\n    /**\n     * Sets how many buckets should we use in the histogram.\n     */\n    setBucketCount,\n\n    /**\n     * Sets maximum allowed amount of pixels.\n     */\n    setMaxPixels,\n\n    /**\n     * Sets grouping method (rgb.r, hsv.h, etc.)\n     */\n    setColorGroupBy,\n\n    /**\n     * Sets how scene should be rendered when ready. \n     */\n    setInitialState,\n\n    ignoreBucket, // WIP\n    getStatistics,// WIP\n  };\n\n  setAnimationDuration(qs.get('d'));\n\n  // Yeah, this is not very good. But hey - this is a toy project. Adding abstraction\n  // layers isn't always good.\n  window.sceneState = state;\n\n  return; // We are done with public part.\n\n  function getSafeAnimationType(rawInput) {\n    if (knownAnimations.has(rawInput)) return rawInput;\n    return 'linear-stochastic';\n  }\n\n  function readIgnoredBuckets(bucketList) {\n    var ignoredBucketSet = new Set();\n    if (!bucketList) return ignoredBucketSet;\n    if (typeof bucketList === 'number') {\n      ignoredBucketSet.add(bucketList);\n      return ignoredBucketSet;\n    }\n\n    var buckets = bucketList.split('_')\n    buckets.forEach(b => {\n      var bucketNumber = Number.parseInt(b, 10);\n      if (!Number.isNaN(bucketNumber)) ignoredBucketSet.add(bucketNumber);\n    })\n\n    return ignoredBucketSet;\n  }\n\n  function ignoreBucket(bucketsToToggle) {\n    if (!bucketsToToggle) {\n      // If they want to clear buckets - let's clear.\n      clearIgnoreBuckets(/* keepQueryString */ true);\n    }\n\n    if (currentPixChart) {\n      // `bucketsToToggle` may be null if they want to clear ignore buckets.\n      toggleIgnoreBuckets(bucketsToToggle);\n\n      keepIgnoreBuckets = true;\n      restartCurrentAnimation(true);\n      //currentPixChart.ignoreBucketSet(ignoredBuckets);\n    }\n    qs.set('ignore', Array.from(ignoredBuckets).join('_'));\n  }\n\n  function toggleIgnoreBuckets(buckets) {\n    if (!buckets) return; // this is okay, means they are just clearing filters;\n\n    if (!Array.isArray(buckets)) buckets = [buckets];\n    buckets.forEach(c => {\n      if (ignoredBuckets.has(c.bucketNumber)) ignoredBuckets.delete(c.bucketNumber);\n      else ignoredBuckets.add(c.bucketNumber);\n    });\n  }\n\n  function getStatistics() {\n    var particles = currentPixChart && currentPixChart.getParticles();\n    if (particles) return makeStats(particles);\n  }\n\n  function setInitialState(newInitialState) {\n    state.initialImageState = newInitialState;\n    qs.set('initial', newInitialState);\n\n    keepIgnoreBuckets = true;\n    restartCurrentAnimation();\n  }\n\n  function getSafeInitialState(plainInput) {\n    if (plainInput === 'collapsed') return plainInput\n    return 'expanded';\n  }\n\n  function getSafeColorGroupBy(plainInput) {\n    return plainInput || 'hsl.l';\n  }\n\n  function getSafeBucketCount(plainInput) {\n    var parsedValue = Number.parseInt(plainInput, 10);\n    if (Number.isNaN(parsedValue) || parsedValue < 1) return DEFAULT_BUCKET_COUNT;\n\n    return parsedValue;\n  }\n\n  function setColorGroupBy(groupBy) {\n    var safeGroupBy = getSafeColorGroupBy(groupBy); \n    state.currentColorGroupBy = safeGroupBy;\n    qs.set('groupBy', state.currentColorGroupBy);\n\n    restartCurrentAnimation();\n  }\n\n  function restartCurrentAnimation() {\n    if (!queue.length) return;\n\n    // TODO: Validate?\n    lastIndex -= 1;\n    if (lastIndex < 0) lastIndex = queue.length - 1;\n    processNextInQueue(/* forceDispose = */true);\n  }\n\n  function handlePaste(e){\n    var items = e.clipboardData.items;\n    var files = [];\n    var strings = [];\n    for(var i = 0; i < items.length; ++i) {\n      var file = items[i];\n      if (file.kind === 'file') files.push(file.getAsFile());\n      else if (file.kind === 'string' && file.type === 'text/plain') strings.push(file);\n    }\n\n    if (files.length > 0) e.preventDefault();\n    if (files.length === 0 && strings.length === 1) {\n      // they are trying to paste a link?\n      strings[0].getAsString(s => {\n        if (s && s.match(/^http?s:\\//)) setImages([s]);\n      })\n    }\n\n    handleDroppedFiles(files);\n  }\n\n  function handleDroppedFiles(files) {\n    var images = files.filter(isImage)\n    if (images.length > 0) {\n      setImages(images);\n    }\n  }\n\n  function isImage(file) {\n    return file && file.type && file.type.indexOf('image/') === 0;\n  }\n\n  function listenToEvents() {\n    window.addEventListener('paste', handlePaste, false);\n    window.addEventListener('resize', updateSize);\n    canvas.addEventListener('click', onCanvasClick);\n    document.body.addEventListener('keydown', onKeyDown);\n    bus.on('theme-changed', updateTheme);\n  }\n\n  function dispose() {\n    if (pendingTimeout) {\n      clearTimeout(pendingTimeout);\n      pendingTimeout = 0;\n    }\n    window.removeEventListener('resize', updateSize);\n    window.removeEventListener('paste', handlePaste, false);\n    canvas.removeEventListener('click', onCanvasClick);\n    document.body.removeEventListener('keydown', onKeyDown);\n    bus.off('theme-changed', updateTheme)\n\n    dropHandler.dispose();\n\n    currentPixChart.dispose();\n    currentPixChart = null;\n  }\n\n  function onKeyDown(e) {\n    if (e.target !== document.body) return; // don't care\n\n    if (e.which === 32) { // spacebar\n      togglePaused({\n        clientX: window.innerWidth/2,\n        clientY: window.innerHeight/2,\n      });\n    } else if (e.which === 39) { // right arrow \n      processNextInQueue(true);\n    } else if (e.which === 37) { // left arrow\n      processPrevInQueue(true);\n    }\n  }\n\n  function onCanvasClick(e) {\n    if (currentPixChart) {\n      e.preventDefault();\n      e.stopPropagation();\n      \n      togglePaused(e);\n    }\n  }\n\n  function togglePaused(e) {\n    state.paused = currentPixChart.togglePaused();\n    if (state.paused) {\n      clearTimeout(pendingTimeout);\n    }\n    showLoadingProgress({\n      step: state.paused ? 'paused' : 'unpaused'\n    });\n    bus.fire('pause-changed', state.paused, {\n      x: e.clientX,\n      y: e.clientY\n    });\n  }\n\n  function updateSize() {\n    if (currentPixChart) {\n      var sideBarWidthOffset = (!state.sidebarOpen || config.isSmallScreen ()) ? 0: config.sidebarWidth;\n      var sideBarHeightOffset = config.isSmallScreen() ? config.sidebarHeight : 0;\n      currentPixChart.setSceneSize(window.innerWidth - sideBarWidthOffset, window.innerHeight - sideBarHeightOffset);\n    }\n  }\n\n  function updateTheme(newTheme) {\n    qs.set('theme', newTheme);\n  }\n\n  function showLoadingProgress(progress) {\n    if (progress.step === 'pixels') {\n      progressElement.innerText = 'Processed ' + formatNumber(progress.current) + ' pixels out of ' + formatNumber(progress.total);\n    } else if (progress.step === 'done') {\n      progressElement.style.opacity = '0';\n      if (progress.imageObject.isUrl) {\n        // other objects cannot be shared\n        qs.set('link', progress.imageObject.name)\n        state.image = progress.imageObject.name;\n        state.isLocalFiles = false;\n      } else {\n        qs.set('link', '')\n        state.image = '';\n        state.isLocalFiles = true;\n      }\n      bus.fire('image-loaded');\n    } else if (progress.step === 'error') {\n      progressElement.classList.add('error');\n      cleanErrorClass = true;\n      progressElement.innerHTML = 'Could not load image :(. <br /> Try uploading it to <a href=\"https://imgur.com\" target=\"_blank\">imgur.com</a>?'\n      if (queue.length > 1) {\n        pendingTimeout = setTimeout(processNextInQueue, 500);\n      }\n    }  else if (progress.step === 'paused') {\n      progressElement.style.opacity = '1';\n      progressElement.innerHTML = 'Paused. Click anywhere to resume';\n      document.body.classList.add('paused');\n    } else if (progress.step === 'unpaused') {\n      progressElement.style.opacity = '0';\n      document.body.classList.remove('paused');\n    }\n\n    if (cleanErrorClass && progress.step !== 'error') {\n      // Just so that we are not doing this too often\n      cleanErrorClass = false;\n      progressElement.classList.remove('error');\n    }\n  }\n\n  function setImage(imageLink, forceDispose) {\n    if (currentPixChart && imageLink === currentPixChart.imageLink && !forceDispose) {\n      currentPixChart.restartCycle()\n      return;\n    }\n\n    if (currentPixChart) {\n      if (pendingTimeout) {\n        clearTimeout(pendingTimeout);\n        pendingTimeout = 0;\n      } \n\n      bus.fire('image-unloaded', currentPixChart);\n\n      currentPixChart.dispose();\n      pendingTimeout = setTimeout(() => {\n        createPixChart(imageLink)\n        pendingTimeout = 0;\n      }, 250); // Give small time for fade animation to finish.\n    } else {\n      createPixChart(imageLink);\n    }\n  }\n\n  function clearIgnoreBuckets(keepQueryString) {\n    ignoredBuckets.clear();\n    if (!keepQueryString) qs.set('ignore', Array.from(ignoredBuckets).join('_'));\n  }\n\n  function createPixChart(imageLink) {\n    progressElement.innerText = 'Loading image...';\n    progressElement.style.opacity = '1';\n\n    // Only keep buckets first time. (TODO: this is a bit fragile)\n    if (!keepIgnoreBuckets) clearIgnoreBuckets();\n    keepIgnoreBuckets = false;\n\n    var pixChartConfig = {\n      canvas,\n      colorGroupBy: state.currentColorGroupBy,\n      scaleImage: true,\n      bucketCount: state.bucketCount,\n      ignoredBuckets,\n      stochastic: isAnimationStochastic(),\n      collapsed: state.initialImageState === 'collapsed',\n      maxPixels: state.maxPixels,\n      framesCount: toFrames(state.duration),\n    };\n\n    if (isBezierAnimation()) {\n      pixChartConfig.interpolate = customInterpolation.bezierNoise; \n    } else if (isVoigram()) {\n      pixChartConfig.interpolate = customInterpolation.voigram; \n    }\n\n    currentPixChart = pixChart(imageLink, pixChartConfig);\n\n    currentPixChart.on('cycle-complete', () => {\n      pendingTimeout = setTimeout(processNextInQueue, PAUSE_BETWEEN_CYCLES);\n    });\n    currentPixChart.on('loading-progress', showLoadingProgress);\n    currentPixChart.on('frame', notifyFrame);\n  }\n\n  function notifyFrame(t) {\n    bus.fire('animation-frame', t);\n  }\n\n  function setImages(files) {\n    state.isFirstRun = false;\n    if (files.length === 0) return;\n    // TODO: Queued images are not visible anywhere.\n    //  Might need to improve UX around this area\n    queue = files;\n    lastIndex = 0;\n\n    processNextInQueue();\n  }\n\n  function setAnimationType(animationType) {\n    var safeType = getSafeAnimationType(animationType)\n    if (safeType !== animationType) throw new Error('unknown animation ' + animationType);\n\n    qs.set('atype', animationType);\n    state.animationType = animationType;\n    if (!currentPixChart) return;\n\n    restartCurrentAnimation();\n  }\n\n  function isAnimationStochastic() {\n    return state.animationType.indexOf('stochastic') > -1;\n  }\n\n  function isBezierAnimation() {\n    return state.animationType.indexOf('bezier') > -1;\n  }\n\n  function isVoigram() {\n    return state.animationType.indexOf('voigram') > -1;\n  }\n\n  function setAnimationDuration(newCount) {\n    var seconds = Number.parseFloat(newCount)\n    if (Number.isNaN(seconds)) return;\n\n    qs.set('d', seconds);\n    state.duration = seconds;\n    if (currentPixChart) {\n      currentPixChart.setFramesCount(toFrames(seconds));\n    }\n  }\n\n  function setBucketCount(newCount) {\n    var bucketCount = Number.parseInt(newCount, 10);\n    if (Number.isNaN(bucketCount) || bucketCount < 1) return;\n\n    qs.set('bc', bucketCount);\n    state.bucketCount = bucketCount;\n    if (currentPixChart) {\n      restartCurrentAnimation();\n    }\n  }\n\n  function setMaxPixels(newCount) {\n    var maxPixels = Number.parseInt(newCount, 10)\n    if (Number.isNaN(maxPixels)) return;\n\n    state.maxPixels = maxPixels;\n\n    if (currentPixChart) {\n      progressElement.style.innerText = 'Updating particles...';\n      progressElement.style.opacity = '1';\n      currentPixChart.setMaxPixels(maxPixels);\n    }\n  }\n\n  function processPrevInQueue(forceDispose) {\n    if (queue.length === 0) return;\n\n    lastIndex -= 2;\n    if (lastIndex < 0) lastIndex = queue.length - 1;\n    processNextInQueue(forceDispose);\n  }\n\n  function processNextInQueue(forceDispose) {\n    if (pendingTimeout) {\n      clearTimeout(pendingTimeout);\n      pendingTimeout = 0;\n    }\n\n    var img = queue[lastIndex]\n    lastIndex += 1;\n    if (lastIndex >= queue.length) lastIndex = 0;\n\n    setImage(img, forceDispose)\n  }\n}\n\nfunction toFrames(seconds) {\n  return seconds * 60; // Assuming 60 fps.\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scene.js","var vertexShader = require('./shaders/histogram.vs.glsl.js');\n\nvar fragmentShader = `\n  precision highp float;\n  varying vec4 v_color;\n\n  void main() {\n      gl_FragColor = v_color;\n  }`;\n\nmodule.exports = createShaders;\n\nfunction createShaders(customInterpolate) {\n  return {\n    fragmentShader,\n    vertexShader: vertexShader(customInterpolate)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pixchart/lib/createShaders.js","module.exports = {\n  bezierNoise() {\n    return `\n  vec2 dest = u_frame[3] == 1. ? \n    bezier(target, target, vec2(snoise(source * h[0]), snoise(source * h[1])), source, tmin) :\n    bezier(source, vec2( snoise(source * h[0]), snoise(source * h[1])), target, target, tmin);\n` },\n\n voigram() {\n    return `` }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/customInterpolation.js","var {rgbToHsl} = require('./colors');\n\nmodule.exports = {\n  'rgb.r': {\n    getValue(r, g, b) { return r/255; },\n    name: 'Red'\n  },\n  'rgb.g': {\n    getValue(r, g, b) { return g/255; },\n    name: 'Green'\n  },\n  'rgb.b': {\n    getValue(r, g, b) { return b/255; },\n    name: 'Blue'\n  },\n  'hsl.h': {\n    getValue(r, g, b) { return rgbToHsl(r, g, b, 0); },\n    name: 'Hue'\n  },\n  'hsl.s': {\n    getValue(r, g, b) { return rgbToHsl(r, g, b, 1); },\n    name: 'Saturation',\n  },\n  'hsl.l': {\n    getValue(r, g, b) { return rgbToHsl(r, g, b, 2); },\n    name: 'Lightness'\n  },\n  'avg.rgb': {\n    getValue(r, g, b) { \n      return (r/255 + g/255 + b/255)/3;\n    },\n    name: 'Average color'\n  },\n  'harmonic.rgb': {\n    getValue(r, g, b) { \n      return 3/(1/r + 1/g + 1/b); \n    },\n    normalize: true,\n    name: 'Harmonic average'\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pixchart/lib/groupFunctions.js","module.exports = getBestMaxPixels;\n\nfunction getBestMaxPixels() {\n  var dpr = Math.floor(window.devicePixelRatio);\n  var windowArea = window.innerWidth * window.innerHeight;\n\n  if (dpr === 1 && windowArea > 640 * 640) {\n    dpr = 2; // Large screens tend to have faster CPUs\n  }\n\n  return Math.round(Math.min(windowArea, 640 * 640) * dpr * 1.1);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/getBestMaxPixels.js","module.exports = {\n  rgbToHsl: rgbToHsl\n};\n\n/**\n * Converts an RGB color value to HSL. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and l in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSL representation\n */\nfunction rgbToHsl(r, g, b, component) {\n  r /= 255, g /= 255, b /= 255;\n\n  var max = Math.max(r, g, b), min = Math.min(r, g, b);\n  var h, s, l = (max + min) / 2;\n\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n      case g: h = (b - r) / d + 2; break;\n      case b: h = (r - g) / d + 4; break;\n    }\n\n    h /= 6;\n  }\n  if (component === 0) return h;\n  if (component === 1) return s;\n  if (component === 2) return l;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pixchart/lib/colors.js","/**\n * This is the core of the rendering and single picture life cycle.\n * It lives in its own folder, and has no dependencies on vue app - \n * can be easily ported to a separate package (TODO: do it?)\n */\nvar eventify = require('ngraph.events');\nvar createShaders = require('./lib/createShaders');\nvar glUtils = require('./lib/gl-utils.js');\nvar loadImage = require('./lib/loadImage');\nvar loadParticles = require('./lib/loadParticles');\n\nvar ANIMATION_COLLAPSE = 1;\nvar ANIMATION_EXPAND = 2;\n\nmodule.exports = pixChart;\n\nfunction pixChart(imageLink, options) {\n  // 'https://i.imgur.com/vOaDMFa.jpg'\n\n  var imageObject = typeof imageLink === 'string' ? urlImage(imageLink) : fileImage(imageLink);\n\n  options = options || {};\n  var canvas = options.canvas;\n  if (!canvas) {\n    throw new Error('Canvas is required');\n  }\n  var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n  if (!gl) {\n    throw new Error('WebGL is not available');\n  }\n\n  // When initial state collapsed, we want to start expanding, and vice versa.\n  var initialState = options.collapsed ? ANIMATION_EXPAND : ANIMATION_COLLAPSE;\n  var state = initialState;\n\n  var nextAnimationFrame, pendingTimeout;\n\n  var disposed = false;\n  var isPaused = false;\n  var lastPauseRelease = 0;\n  var framesCount = options.framesCount || 120;\n\n  var currentFrameNumber = state === ANIMATION_COLLAPSE ? 0 : framesCount;\n\n  var particleLoaderSettings = {\n    isCancelled: false,\n    ignoredBuckets: options.ignoredBuckets || null,\n    framesCount: framesCount,\n    onProgress: reportImageStatsProgress,\n    colorGroupBy: options.colorGroupBy,\n    bucketCount: options.bucketCount,\n    stochastic: options.stochastic === undefined ? true : options.stochastic\n  }\n\n  var progress = {\n    imageObject: imageObject,\n    total: 0,\n    current: 0,\n    step: 'image',\n  };\n\n  var requestSizeUpdate = false;\n\n  // Image size can be different than scene size (e.g. image is smaller than screen)\n  // Thus, we need to track them both.\n  var imageWidth, imageHeight, minFrameSpan, maxFrameSpan, frameChangeRate;\n  var imgInfo, particleAttributesBuffer, currentParticles;\n\n  var sceneWidth = canvas.clientWidth;\n  var sceneHeight = canvas.clientHeight;\n\n  var scaleImage = options.scaleImage !== undefined ? options.scaleImage : true;\n  var maxPixels = options.maxPixels;\n  var startDelay = typeof options.startDelay === 'number' ? options.startDelay : 2000;\n  var reverseDelay = typeof options.reverseDelay === 'number' ? options.reverseDelay : 1500;\n\n  var shaders = createShaders(options.interpolate);\n  var screenProgram = glUtils.createProgram(gl, shaders.vertexShader, shaders.fragmentShader);\n\n  var api = eventify({\n    dispose,\n    imageLink,\n    getParticles,\n    ignoreBucketSet,\n    restartCycle: startExpandCollapseCycle,\n    setSceneSize: setSceneSize,\n    setFramesCount,\n    setMaxPixels,\n    colorGroupBy,\n    togglePaused\n  });\n\n  // So that any event handler are subscribed.\n  setTimeout(startAnimationPipeline, 0);\n\n  return api;\n\n  function getParticles() {\n    return currentParticles;\n  }\n\n  function startAnimationPipeline() {\n    loadImageWithCurrentOptions()\n      .then(updateProgressAndLoadParticles)\n      .then(initWebGLPrimitives)\n      .then(startExpandCollapseCycle)\n      .catch(error => {\n        // TODO: this may not be necessary Image problem...\n        console.error('error', error);\n        progress.step = 'error'\n        notifyProgress();\n      });\n  }\n\n  function setMaxPixels(newMaxPixels) {\n    maxPixels = newMaxPixels; // TODO: Validate?\n\n    loadImageWithCurrentOptions()\n      .then(updateProgressAndLoadParticles)\n      .then(loadedImage => initWebGLPrimitives(loadedImage, /* keepCurrentFrame = */ true));\n  }\n\n  function loadImageWithCurrentOptions() {\n    return loadImage(imageObject, {\n      scaleImage,\n      maxPixels\n    })\n  }\n\n  function colorGroupBy(newColorGroupBy) {\n    particleLoaderSettings.colorGroupBy = newColorGroupBy;\n\n    loadImageWithCurrentOptions()\n      .then(updateProgressAndLoadParticles)\n      .then(initWebGLPrimitives);\n  }\n\n  function ignoreBucketSet(newIgnoredBucketsSet) {\n    particleLoaderSettings.ignoredBuckets = newIgnoredBucketsSet;\n\n    loadImageWithCurrentOptions()\n      .then(updateProgressAndLoadParticles)\n      .then(initWebGLPrimitives);\n  }\n\n  function togglePaused() {\n    if (!imgInfo) return; // not loaded yet.\n\n    if (isPaused) {\n      nextAnimationFrame = requestAnimationFrame(animate);\n    } else {\n      cancelAnimationFrame(nextAnimationFrame);\n      nextAnimationFrame = 0;\n      clearTimeout(pendingTimeout);\n      pendingTimeout = 0;\n      lastPauseRelease = new Date();\n    }\n    isPaused = !isPaused;\n    return isPaused;\n  }\n\n  function updateProgressAndLoadParticles(image) {\n    progress.total = image.width * image.height;\n    progress.step = 'pixels';\n    currentParticles = null;\n    notifyProgress();\n\n    return loadParticles(image, particleLoaderSettings)\n      .then(particles => {\n        currentParticles = particles;\n        progress.step = 'done';\n        notifyProgress();\n\n        return {\n          // Note: we are using particles.canvas here instead of image\n          // because on smaller devices (like a phone) large images\n          // can fail to load onto GPU (the texture is black). I'm not sure if using\n          // canvas is going to have negative impact on quality. Need to keep an eye.\n          texture: glUtils.createTexture(gl, particles.canvas),\n          particles: particles,\n          width: image.width,\n          height: image.height\n        };\n    });\n  }\n\n  function reportImageStatsProgress(processedPixels) {\n    progress.current = processedPixels;\n    notifyProgress();\n  }\n\n  function notifyProgress() {\n    api.fire('loading-progress', progress);\n  }\n\n  function setFramesCount(newCount) {\n    framesCount = Math.max(newCount, 1);\n    frameChangeRate = (maxFrameSpan - minFrameSpan)/framesCount;\n  }\n\n  function setSceneSize(width, height) {\n    canvas.width = width;\n    canvas.height = height;\n    sceneWidth = width;\n    sceneHeight = height;\n\n    requestAnimationFrame(() => {\n      requestSizeUpdate = true;\n      gl.viewport(0, 0, sceneWidth, sceneHeight);\n      drawCurrentFrame();\n    });\n  }\n\n  function initWebGLPrimitives(loadedImage, keepCurrentFrame) {\n    if (disposed) return;\n    canvas.style.opacity = 1;\n\n    releasePreviousWebGLResources();\n\n    imgInfo = loadedImage\n    imageWidth = imgInfo.width, imageHeight = imgInfo.height;\n    var particles = imgInfo.particles;\n    minFrameSpan = particles.minFrameSpan;\n    maxFrameSpan = particles.maxFrameSpan;\n    frameChangeRate = (maxFrameSpan - minFrameSpan)/framesCount;\n\n    particleAttributesBuffer = glUtils.createBuffer(gl, particles.particleAttributes);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n  \n    gl.useProgram(screenProgram.program);  \n    \n    glUtils.bindAttribute(gl, particleAttributesBuffer, screenProgram.a_particle, 4);  \n    glUtils.bindTexture(gl, imgInfo.texture, 2);\n\n    if (!keepCurrentFrame) setInitialFrameNumber();\n\n    gl.uniform4f(screenProgram.u_frame, currentFrameNumber, minFrameSpan, maxFrameSpan, state);\n\n    gl.uniform1f(screenProgram.u_max_y_value, particles.maxYValue);\n    gl.uniform4f(screenProgram.u_sizes, imageWidth, imageHeight, sceneWidth, sceneHeight);\n\n    gl.uniform1i(screenProgram.u_image, 2);\n    gl.drawArrays(gl.POINTS, 0, imageWidth * imageHeight);  \n  }\n\n  function animate() {\n    nextAnimationFrame = 0;\n\n    drawCurrentFrame();\n    scheduleNextFrame();\n    var t = (currentFrameNumber - minFrameSpan)/(maxFrameSpan - minFrameSpan);\n    if (state === ANIMATION_EXPAND) t = 1 - t;\n    api.fire('frame', t);\n  }\n\n  function drawCurrentFrame() {\n    gl.useProgram(screenProgram.program); \n\n    if (requestSizeUpdate) {\n      requestSizeUpdate = false;\n      gl.uniform4f(screenProgram.u_sizes, imageWidth, imageHeight, sceneWidth, sceneHeight);\n    }\n\n    gl.uniform4f(screenProgram.u_frame, currentFrameNumber, minFrameSpan, maxFrameSpan, state);\n    gl.drawArrays(gl.POINTS, 0, imageWidth * imageHeight);  \n  }\n\n  function startExpandCollapseCycle() {\n    // One cycle consists of collapsing image, and then expanding it.\n    // After cycle is done, options.cycleComplete() callback is executed.\n\n    // Note: we don't want to start animation immediately, so that users\n    // can see the scene in its expanded or collapsed state.\n    if (disposed) return;\n    if (nextAnimationFrame || pendingTimeout) return; // already scheduled.\n    var delay = startDelay;\n    if (new Date() - lastPauseRelease < 500) {\n      delay = 0;\n    }\n\n    pendingTimeout = setTimeout(() => {\n      pendingTimeout = 0;\n      nextAnimationFrame = requestAnimationFrame(animate)\n    }, delay);\n  }\n    \n  function scheduleNextFrame() {\n    // TODO: Simplify this code. It's remnant of older loop.\n    // We want to pause when collapse or expand phase has finished.\n    if (state === ANIMATION_COLLAPSE) {\n      if (currentFrameNumber < maxFrameSpan) {\n        currentFrameNumber += frameChangeRate;\n        nextAnimationFrame = requestAnimationFrame(animate);\n      } else {\n        state = ANIMATION_EXPAND;\n        completeState();\n      }\n    } else {\n      if (currentFrameNumber < maxFrameSpan ) {\n        currentFrameNumber += frameChangeRate;\n        if (initialState === ANIMATION_COLLAPSE) {\n          // Expand faster in this case\n          if (currentFrameNumber < maxFrameSpan) currentFrameNumber += frameChangeRate * 0.5;\n        }\n        nextAnimationFrame = requestAnimationFrame(animate);\n      } else {\n        state = ANIMATION_COLLAPSE;\n        completeState();\n      }\n    }\n  }\n\n  function setInitialFrameNumber() {\n    currentFrameNumber = minFrameSpan;\n  }\n\n  function completeState() {\n    setInitialFrameNumber();\n    if (state === initialState) {\n      // make a pause, let the clients re-trigger.\n      api.fire('cycle-complete');\n    } else {\n      // drive it back to original state\n      var delay = reverseDelay;\n      if (new Date() - lastPauseRelease < 500) {\n        // If pause was just released - don't wait.\n        delay = 0;\n      }\n      pendingTimeout = setTimeout(() => {\n        pendingTimeout = 0;\n        nextAnimationFrame = requestAnimationFrame(animate);\n      }, delay);\n    }\n  }\n\n  function dispose() {\n    cancelAnimationFrame(nextAnimationFrame);\n    clearTimeout(pendingTimeout);\n    releasePreviousWebGLResources();\n    if (screenProgram) {\n      screenProgram.unload();\n    }\n\n    canvas.style.opacity = 0;\n    particleLoaderSettings.isCancelled = true;\n    nextAnimationFrame = 0;\n    pendingTimeout = 0;\n    disposed = true;\n  }\n\n  function releasePreviousWebGLResources() {\n    if (particleAttributesBuffer) {\n      gl.deleteBuffer(particleAttributesBuffer);\n      particleAttributesBuffer = null;\n    }\n    if (imgInfo) {\n      gl.deleteTexture(imgInfo.texture);\n      imgInfo = null;\n    }\n  }\n}\n\n// allows to load images from a url\nfunction urlImage(link) {\n  return {\n    name: link,\n    isUrl: true,\n    getUrl() {\n      return link\n    }\n  }\n}\n\n// this loads images from a local file\nfunction fileImage(file) {\n  return {\n    name: file.name,\n    getUrl() {\n      return window.URL.createObjectURL(file);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pixchart/index.js","\nmodule.exports = makeStats;\n\nfunction makeStats(particles) {\n  var buckets = particles.buckets;\n  var n = buckets.length;\n  var sortedBuckets = [];\n  var ignoredBuckets = particles.ignoredBuckets;\n\n  for (var i = 0; i < n; ++i) {\n    var count = buckets[i];\n    if (count === 0) continue;\n    var isFiltered = ignoredBuckets && ignoredBuckets.has(i);\n\n    sortedBuckets.push({\n      bucketNumber: i,\n      id: i/n,\n      count: isFiltered ? 0 : buckets[i],\n      isFiltered,\n      ratio: 100 * buckets[i]/(particles.maxYValue * particles.bucketWidth)\n    });\n  }\n\n  sortedBuckets.sort((b, a) => {\n    return a.count - b.count;\n  });\n\n  return {\n    step: 1/n,\n    isFiltered: ignoredBuckets && ignoredBuckets.size > 0,\n    buckets: sortedBuckets,\n    name: particles.groupByFunctionName + ' bucket '\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/makeStats.js","var initScene = require('./scene');\nvar config = require('./config');\n\nvar canvas = document.getElementById('scene');\n// Canvas may not be available in test run\nif (canvas) initPixChart(canvas);\n\n// Tell webpack to split bundle, and download settings UI later.\nrequire.ensure('@/mainVue.js', () => {\n  // Settings UI is ready, initialize vue.js application\n  require('@/mainVue.js');\n});\n\nfunction initPixChart(canvas) {\n  var width = window.innerWidth;\n  var height = window.innerHeight;\n  if (config.isSmallScreen()) {\n    height -= config.sidebarHeight;\n  } else {\n    // large screens have sidebar on the left, need to remove some space\n    // from canvas to account for the sidebar.\n    width -= config.sidebarWidth;\n  }\n  canvas.width = width;\n  canvas.height =  height;\n  var ctxOptions = {antialias: false};\n\n  var gl = canvas.getContext('webgl', ctxOptions) ||\n          canvas.getContext('experimental-webgl', ctxOptions);\n\n  if (gl) {\n    window.webGLEnabled = true;\n    var scene = initScene(canvas);\n    // scene.start();\n    window.scene = scene;\n  } else {\n    window.webGLEnabled = false;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/nativeMain.js","/**\n * Handles dropped files into the browser.\n */\nmodule.exports = fileDrop;\n\nfunction fileDrop(dropHandler, onDropped) {\n  dropHandler.addEventListener('drop', handleDrop, true);\n  dropHandler.addEventListener('dragover', handleDragOver);\n  dropHandler.addEventListener('dragenter', prevent);\n  dropHandler.addEventListener('dragleave', handleDragEnd)\n  dropHandler.addEventListener('dragend', handleDragEnd);\n\n  return {\n    dispose\n  }\n\n  function dispose() {\n    dropHandler.removeEventListener('drop', handleDrop);\n    dropHandler.removeEventListener('dragover', handleDragOver);\n    dropHandler.removeEventListener('dragenter', prevent);\n    dropHandler.removeEventListener('dragleave', handleDragEnd)\n    dropHandler.removeEventListener('dragend', handleDragEnd);\n  }\n\n  function prevent(e) {\n    if (!hasFiles(e)) return;\n\n    e.preventDefault();\n  }\n\n  function handleDrop(ev) {\n    handleDragEnd();\n    ev.preventDefault();\n    // If dropped items aren't files, reject them\n    var dt = ev.dataTransfer;\n    var files = []\n    if (dt.items) {\n      // Use DataTransferItemList interface to access the file(s)\n      for (var i = 0; i < dt.items.length; i++) {\n        if (dt.items[i].kind == \"file\") {\n          var file = dt.items[i].getAsFile();\n          files.push(file);\n        }\n      }\n    } else {\n      // Use DataTransfer interface to access the file(s)\n      for (var i = 0; i < dt.files.length; i++) {\n        var file = dt.files[i];\n        files.push(file);\n      } \n    }\n\n    onDropped(files);\n  }\n\n\n  function handleDragOver(e) {\n    if (!hasFiles(e)) return;\n\n    e.preventDefault();\n    dropHandler.classList.add('drag-over');\n  }\n\n  function hasFiles(e) {\n    if (!e.dataTransfer) return false;\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) return true;\n    var items = e.dataTransfer.items;\n    if (!items) return false;\n    for (var i = 0; i < items.length; ++i) {\n      if (items[i].kind === 'file') return true;\n    }\n\n    return false;\n  }\n\n  function handleDragEnd() {\n    dropHandler.classList.remove('drag-over');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fileDrop.js","module.exports = loadImage;\n\nfunction loadImage(imageObject, options) {\n  options = options || {};\n  var resolveImage, rejectImage;\n  var scaleImage = options.scaleImage;\n  var maxPixels = options.maxPixels;\n\n  var image = new Image();\n  image.crossOrigin = '';\n\n  image.onload = imageLoaded;\n  image.onerror = reportError;\n  image.src = imageObject.getUrl();\n\n  return new Promise((resolve, reject) => {\n    resolveImage = resolve;\n    rejectImage = reject; \n  });\n\n  function reportError(err) { rejectImage(err); }\n  \n  function imageLoaded() {\n    if (scaleImage) scale(image);\n    resolveImage(image);\n  }\n\n  function scale(image) {\n    // scaling image may change/distort colors.\n    if (!maxPixels) {\n      // TODO: Not sure if this is bad or good.\n      maxPixels = Math.min(window.innerWidth * window.innerHeight , 640 * 640) * window.devicePixelRatio;\n    }\n\n    var ar = image.width/image.height;\n    var h0 = Math.ceil(Math.sqrt(maxPixels * ar));\n    var w0 = Math.ceil(maxPixels / h0);\n    if (h0 < image.height || w0 < image.width) {\n      image.width = h0;\n      image.height = w0;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pixchart/lib/loadImage.js","module.exports = function format(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/formatNumber.js","// Based on https://github.com/mapbox/webgl-wind\n// Licensed under ISC License Copyright (c) 2016, Mapbox\n// https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n\n// Adapted to my own needs here.\n\nmodule.exports = {\n  bindTexture: bindTexture,\n  createBuffer: createBuffer,\n  bindAttribute: bindAttribute,\n  createProgram: createProgram,\n  createShader: createShader,\n  createTexture: createTexture\n}\n\nfunction bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\nfunction createTexture(gl, image) {\n  var texture = gl.createTexture();\n  var level = 0;\n  var internalFormat = gl.RGBA;\n  var srcFormat = gl.RGBA;\n  var srcType = gl.UNSIGNED_BYTE;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  return texture;\n}\n\nfunction createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\n\nfunction bindAttribute(gl, buffer, attribute, numComponents) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\n\nfunction createProgram(gl, vertexSource, fragmentSource) {\n  var program = gl.createProgram();\n\n  var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program));\n  }\n\n  var wrapper = {\n    program: program,\n    unload: unload\n  };\n\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  var i;\n  for (i = 0; i < numAttributes; i++) {\n    var attribute = gl.getActiveAttrib(program, i);\n    wrapper[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (i = 0; i < numUniforms; i++) {\n    var uniform = gl.getActiveUniform(program, i);\n    wrapper[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  return wrapper; \n\n  function unload() {\n    gl.deleteProgram(program);\n  }\n}\n\nfunction createShader(gl, type, source) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(shader));\n  }\n\n  return shader;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pixchart/lib/gl-utils.js"],"sourceRoot":""}